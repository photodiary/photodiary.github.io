{"version":3,"sources":["assets/images/logo.png","components/Header/index.js","containers/Home/index.js","containers/About/index.js","containers/Offer/index.js","containers/Contact/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","fadeProperties","duration","transitionDuration","prevArrow","nextArrow","className","id","map","bgClass","href","src","require","alt","Home","React","Component","About","Offer","Contact","submitForm","bind","state","status","this","Row","Col","class","md","xs","Form","onSubmit","action","method","Label","Input","type","name","rows","style","resize","Button","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","App","basename","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5c5f602e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3091d205.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Fade } from 'react-slideshow-image';\r\nimport './style.css';\r\nimport 'react-slideshow-image/dist/styles.css'\r\n\r\nconst Header = (props) => {\r\n    const bgClasses = [\r\n        \"bg1\", \"bg2\", \"bg3\", \"bg4\"\r\n    ]\r\n\r\n    const fadeProperties = {\r\n        duration: 3000,\r\n        transitionDuration: 1700,\r\n        prevArrow: <span></span>,\r\n        nextArrow: <span></span>\r\n    };\r\n\r\n    return (\r\n        <div className=\"slide-container\">\r\n            <div id=\"navbar-content\" >\r\n                <Fade {...fadeProperties}>\r\n                    {bgClasses.map(bgClass => {\r\n                        return (\r\n                            <div\r\n                                className={\"each-fade bg-image \" + bgClass}\r\n                            >\r\n                                <nav id=\"navbar\">\r\n                                    <a href=\"/\" id=\"homeLink\">\r\n                                        <img id=\"logo\" src={require(\"../../assets/images/logo.png\")} alt=\"logo\" />\r\n                                    </a>\r\n                                    <div id=\"menu\">\r\n                                        <a href=\"/o-mnie\">O MNIE</a>\r\n                                        <a href=\"/oferta\">OFERTA</a>\r\n                                        <a href=\"/kontakt\">KONTAKT</a>\r\n                                    </div>\r\n                                </nav>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </Fade>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport { Container, Row, Col, Collapse } from 'reactstrap';\r\nimport data from '../../data.json';\r\nimport './style.css';\r\nimport Header from '../../components/Header';\r\n\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div id=\"content\">\r\n          Home\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}","import React from 'react';\r\nimport Header from '../../components/Header';\r\n\r\n\r\nconst About = (props) => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div id=\"content\">\r\n                About\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport Header from '../../components/Header';\r\n\r\n\r\nconst Offer = (props) => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div id=\"content\">\r\n        Offer\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Offer;","import React from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText, Row, Col } from 'reactstrap';\r\nimport './style.css';\r\nimport Header from \"../../components/Header\";\r\n\r\nexport default class Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.state = {\r\n      status: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state;\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div id=\"content\">\r\n          <Row>\r\n            <Col>\r\n              <h1>Kontakt do mnie</h1>\r\n\r\n              <a href=\"mailto:anna.nogalska@interia.eu\" className=\"a-link\">\r\n                <i class=\"icon fas fa-envelope\" />\r\n                <p>anna.nogalska@interia.eu</p>\r\n              </a>\r\n\r\n              <i class=\"icon fas fa-phone\"></i>\r\n              <p>123 456 789</p>\r\n\r\n              <a href=\"https://www.instagram.com/annanogalska.photodiary/\" className=\"a-link\">\r\n                <i class=\"icon fab fa-instagram\" id=\"instagram-icon\" />\r\n                <p>@annanogalska.photodiary</p></a>\r\n\r\n              <a href=\"https://www.facebook.com/annanogalska.photodiary/\" className=\"a-link\">\r\n                <i class=\"icon fab fa-facebook\" />\r\n                <p>fb.com/annanogalska.photodiary</p></a>\r\n\r\n              <div className=\"separator\"><hr /></div>\r\n\r\n            </Col>\r\n            <Col md=\"6\" xs=\"12\">\r\n              <h3>Napisz do mnie</h3>\r\n              <Form\r\n                onSubmit={this.submitForm}\r\n                action=\"https://formspree.io/xvowddrj\"\r\n                method=\"POST\"\r\n              >\r\n                <Label>Imię i Nazwisko:</Label>\r\n                <Input type=\"text\" name=\"name\" />\r\n                <Label>Email:</Label>\r\n                <Input type=\"email\" name=\"email\" />\r\n                <Label>Wiadomość:</Label>\r\n                <Input type=\"textarea\" name=\"message\" rows=\"4\" style={{ resize: \"none\" }} />\r\n                <div className=\"buttonArea\">\r\n                  {status === \"SUCCESS\" ? <p>Dziękuję za wiadomość!</p> : <Button>Wyślij</Button>}\r\n                  {status === \"ERROR\" && <p>Wystąpił błąd - spróbuj ponownie później.</p>}\r\n                </div>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  submitForm(ev) {\r\n    ev.preventDefault();\r\n    const form = ev.target;\r\n    const data = new FormData(form);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(form.method, form.action);\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n      if (xhr.status === 200) {\r\n        form.reset();\r\n        this.setState({ status: \"SUCCESS\" });\r\n      } else {\r\n        this.setState({ status: \"ERROR\" });\r\n      }\r\n    };\r\n    xhr.send(data);\r\n  }\r\n}\r\n","import React from 'react';\nimport { HashRouter, Route, Link } from 'react-router-dom';\nimport Home from './containers/Home';\nimport About from './containers/About';\nimport Offer from './containers/Offer';\nimport Contact from './containers/Contact';\nimport Header from './components/Header';\nimport Instafeed from './components/Instafeed';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <HashRouter basename='/'>\n          <Route path=\"/o-mnie\" exact component={About} />\n          <Route path=\"/oferta\" component={Offer} />\n          <Route path=\"/kontakt\" component={Contact} />\n          <Route path=\"/\" component={Home} />\n        {/* <Instafeed/> */}\n        {/* <Footer/> */}\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}